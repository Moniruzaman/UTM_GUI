<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCABkAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/iiivEv2jvGXiP4e/BH4i+NPCNzb2fiLw7oP9oaXdXVnDqEE
        M639lE7yWdwDDcL9nlmASTKhirYJUVMpKMXJ7RTbtvp2A9syB3qraX9jfpJLY3lreRQ3E9pLJa3ENxHH
        dWshhubaR4XdUuLaZWinhYiWGRWjlRXBFfzY/GH/AIKFftZ/DvwJ4g+JGkeNbDW9T8Nx2k1r4e1Lwt4c
        j8Pak2p6hb6NHa3VtZ2+kTOxn1GAWc0mr2sdve/Z7ieRoIpY5PMPgp8Uv+Csfir4bW/i34X6Xq2ifDzx
        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
        /9k=
</value>
  </data>
</root>